# from openai import OpenAI
#
# client = OpenAI(api_key="sk-96d2ec99b2fe4908bdab2c8962e57f20", base_url="https://api.deepseek.com")
#
# response = client.chat.completions.create(
#     model="deepseek-chat",
#     messages=[
#         {"role": "system", "content": "You are a helpful assistant"},
#         {"role": "user", "content": "Hello"},
#     ],
#     stream=False
# )
#
# print(response.choices[0].message.content)

from openai import OpenAI
import json

client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key="",
)

request = """
Мне нужно создать карточку игрока для игры "Бункер". Я предоставлю описание катастрофы и условия бункера, а ты должен заполнить карточку игрока в указанном формате. Карточка должна соответствовать условиям катастрофы и бункера. У игрока должны быть полезные качества, навыки или предметы в инвентаре, которые помогут выжить в данных условиях. Все характеристики должны начинаться с большой буквы и быть на русском языке.
Вот описание катастрофы и бункера, где будут находиться люди
  "catastrophe": {
      "catastrophe_title": "Тень забвения",
      "catastrophe_description": "В один мрачный день, когда солнце едва пробивалось сквозь облака, мир столкнулся с катастрофой, о которой никто не мог даже предположить. В результате таинственного эксперимента по манипуляции с пространственно-временным континуумом, произошел сбой, который открыл врата в параллельные реальности. Вскоре после этого, в городах начали появляться тени — существа, лишенные формы и разума, которые поглощали воспоминания людей, оставляя их в состоянии полной амнезии.",
      "residence_time": "5 лет, если не будет найден способ закрыть врата и вернуть все на свои места. Если в бункере не окажется никого, кто сможет помочь с исправлением катастрофы, то через 2 года тени начнут проникать внутрь, поглощая последние воспоминания выживших.",
      "additional_information": [
        "До отключения установок осталось 3 года, и они могут активировать новые параллельные реальности.",
        "Выжившие должны найти способ восстановить контроль над ситуацией, иначе мир погрузится в вечное забвение."
      ]
    },
    "bunker": {
      "bunker_title": "Центр контроля реальностей",
      "bunker_description": "Этот бункер был построен как исследовательский центр для изучения параллельных реальностей. Он оснащен высокими технологиями и оборудованием, необходимым для анализа и закрытия врат. Однако, без квалифицированных специалистов, его возможности остаются неиспользованными.",
      "additional_information": [
        "В бункере есть система мониторинга, которая может отслеживать активность теней.",
        "Запасы энергии истощаются, и необходимо найти способ перезапустить генераторы."
      ],
      "tools": [
        "Компьютеры для анализа данных",
        "Система мониторинга",
        "Запасы еды и воды",
        "Аптечка первой помощи",
        "Генераторы"
      ],
      "size": 400,
      "number_of_seats": 5,

Вот формат, который нужно заполнить:
      {
          "sex": "",
          "age": "",
          "health": "",
          "profession": "",
          "inventory": "",
          "phobia": "",
          "hobby": "",
          "violation_of_law": "",
          "additional_information": "",
          "bad_habits": "",
          "special_condition": "",
          "work_experience": ""
        },
Пришли только JSON, без лишнего текста. Убедись, что все символы соответствуют UTF-8. Мне нужен только JSON на русском языке!
"""

request = """
Мне нужно создать карточку игрока для игры "Бункер" на основе предоставленного описания катастрофы и условий бункера. Карточка должна быть заполнена в формате JSON, где каждая характеристика начинается с большой буквы и написана на русском языке. Все данные должны соответствовать условиям катастрофы и бункера, а также быть полезными для выживания и решения задач в игре.

Описание катастрофы:
"Тень забвения" — результат таинственного эксперимента, открывшего врата в параллельные реальности. Тени поглощают воспоминания, вызывая амнезию. В бункере есть центр контроля реальностей с системами мониторинга и компьютерами, но требуются специалисты для закрытия врат.

Условия бункера:

    Бункер оборудован системами мониторинга и компьютерами.

    Необходимо закрыть врата, чтобы остановить катастрофу.

    Персонаж должен быть полезен для решения этой задачи.

Требования к персонажу:

    Профессия должна быть связана с наукой или технологиями (например, физик, инженер, программист).

    Инвентарь должен включать полезные предметы для анализа данных, ремонта оборудования и выживания (например, ноутбук, мультиметр, аптечка, фонарь).

    Здоровье может быть слабым (например, из-за отсутствия физической активности) или крепким (если персонаж должен быть выносливым).

    Фобии и вредные привычки должны добавлять характеру (например, страх темноты, стрессовое курение).

    Дополнительная информация может включать опыт работы с секретными проектами или специальные навыки (например, знание основ программирования, работа с электроникой).

Формат JSON для заполнения:

{
  "sex": "",
  "age": "",
  "health": "",
  "profession": "",
  "inventory": "",
  "phobia": "",
  "hobby": "",
  "violation_of_law": "",
  "additional_information": "",
  "bad_habits": "",
  "special_condition": "",
  "work_experience": ""
}
Ответь без рассуждений

Требования к ответу:

    Пришли только JSON, без лишнего текста. Удали всё, что не является json`ом. Не пиши, как ты размышляешь над задачей. Пришли лишь json. И ВСЁ, НИЧЕГО ДРУГОГО НЕ НАДО ПРИСЫЛАТЬ

    Все характеристики должны быть на русском языке и начинаться с большой буквы.

    Убедись, что символы соответствуют UTF-8.

    Персонаж должен быть полезен для условий катастрофы и бункера.
"""

completion = client.chat.completions.create(
    extra_body={},
    model="deepseek/deepseek-r1-distill-llama-70b:free",
    messages=[
        {
            "role": "user",
            "content": request
        }
    ],
    max_tokens=1000
)
print(completion.choices[0].message.content)
response = completion.choices[0].message.content.replace("```json", "").replace("```", "")
# print(response)
data_dict = json.loads(response)
print(data_dict)
